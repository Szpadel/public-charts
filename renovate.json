{
  "$schema": "https://docs.renovatebot.com/renovate-schema.json",
  "extends": [
    "config:base",
    "config:base",
    ":enablePreCommit",
    ":automergeMinor",
    ":prConcurrentLimit10",
    ":separateMultipleMajorReleases",
    ":enablePreCommit",
    ":prHourlyLimitNone",
    ":pinVersions",
    "docker:pinDigests"
  ],
  "dockerfile": {
    "enabled": true,
    "fileMatch": [
      "^containers/[^/]+/Dockerfile$"
    ]
  },
  "docker": {
    "versioning": "docker"
  },
  "major": {
    "dependencyDashboardApproval": true
  },
  "prCreation": "not-pending",
  "rebaseWhen": "behind-base-branch",
  "github-actions": {
    "fileMatch": [
      "^(workflow-templates|\\.github\\/workflows)\\/[^/]+\\.ya?ml$",
      "(^|\\/)action\\.ya?ml$"
    ]
  },
  "packageRules": [
    {
      "matchManagers": [
        "helm-requirements",
        "helm-values"
      ],
      "matchUpdateTypes": [
        "pinDigest",
        "pin",
        "patch",
        "digest"
      ],
      "postUpgradeTasks": {
        "commands": [
          "docker run --rm -w \"$PWD\" -v\"$PWD:$PWD\" alpine sh -c 'apk add --no-cache bash && ./scripts/release.sh --alpine-install-deps --chown 1000:1000 --bump-patch \"$(basename '{{parentDir}}')\"'"
        ],
        "fileFilters": [
          "**/Chart.yaml",
          "releases/*",
          "index.yaml"
        ],
        "executionMode": "branch"
      },
      "groupName": "helm-patch"
    },
    {
      "matchManagers": [
        "helm-requirements",
        "helm-values"
      ],
      "matchUpdateTypes": [
        "minor"
      ],
      "postUpgradeTasks": {
        "commands": [
          "docker run --rm -w \"$PWD\" -v\"$PWD:$PWD\" alpine sh -c 'apk add --no-cache bash && ./scripts/release.sh --alpine-install-deps --chown 1000:1000 --bump-minor \"$(basename '{{parentDir}}')\"'"
        ],
        "fileFilters": [
          "**/Chart.yaml",
          "releases/*",
          "index.yaml"
        ],
        "executionMode": "branch"
      },
      "groupName": "helm-minor"
    },
    {
      "matchPaths": [
        "^containers/[^/]+/Dockerfile$"
      ],
      "postUpgradeTasks": {
        "commands": [
          "IFS='.' read -ra verArray <<< \"$(cat containers/{{parentDir}}/VERSION)\"; newVer=\"${verArray[0]}.${verArray[1]}.$(( verArray[2] + 1 ))\"; echo \"$newVer\" > containers/{{parentDir}}/VERSION"
        ],
        "fileFilters": [
          "containers/{{parentDir}}/VERSION"
        ]
      }
    }
  ]
}
