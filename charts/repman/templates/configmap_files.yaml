apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "repman.fullname" . }}-files
  labels:
    {{- include "repman.labels" . | nindent 4 }}
data:
  nginx_conf: |-
    user nginx;
    worker_processes auto;

    error_log /var/log/nginx/error.log warn;
    pid /var/run/nginx.pid;

    events {
        worker_connections 1024;
    }

    http {
        server_tokens off;
        fastcgi_read_timeout 300;
        client_max_body_size 200M;
        log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                        '$status $body_bytes_sent "$http_referer" '
                        '"$http_user_agent" "$http_x_forwarded_for" '
                        '$upstream_response_time';

        access_log  /var/log/nginx/access.log  main;

        sendfile            on;
        tcp_nopush          on;
        tcp_nodelay         on;
        keepalive_timeout   65;
        types_hash_max_size 2048;

        include             /etc/nginx/mime.types;
        default_type        application/octet-stream;

        server {
            listen       80;
            listen       [::]:80;
            server_name _;
            root /app/public;

            add_header Strict-Transport-Security "max-age=31536000; includeSubDomains";
            add_header X-Frame-Options DENY;
            add_header X-Content-Type-Options nosniff;
            add_header X-XSS-Protection "1; mode=block";

            location / {
                try_files $uri /index.php$is_args$args;
            }

            location ~ ^/index\.php(/|$) {
                fastcgi_split_path_info ^(.+\.php)(/.*)$;
                fastcgi_pass localhost:9000;
                fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
                fastcgi_param DOCUMENT_ROOT $realpath_root;
                include fastcgi_params;
                internal;
            }
        }
    }

  services_prod_yaml: |-
    parameters:
      aws_s3_region: '%env(STORAGE_AWS_REGION)%'
      aws_s3_default_endpoint: 'https://s3.%aws_s3_region%.amazonaws.com'
    services:
      Aws\S3\S3Client:
        lazy: true
        arguments:
        - version: 'latest'
          region: '%aws_s3_region%'
          endpoint: '%env(default:aws_s3_default_endpoint:STORAGE_AWS_ENDPOINT)%'
          use_path_style_endpoint: '%env(bool:STORAGE_AWS_PATH_STYLE_ENDPOINT)%'
          credentials:
            key: '%env(STORAGE_AWS_KEY)%'
            secret: '%env(STORAGE_AWS_SECRET)%'
      Symfony\Component\HttpFoundation\Session\Storage\Handler\PdoSessionHandler:
        arguments:
          - '%env(DATABASE_URL)%'
    framework:
      session:
        handler_id: Symfony\Component\HttpFoundation\Session\Storage\Handler\PdoSessionHandler

  Version20210115094614_php: |-
    <?php

    declare(strict_types=1);

    namespace Buddy\Repman\Migrations;

    use Doctrine\DBAL\Schema\Schema;
    use Doctrine\Migrations\AbstractMigration;

    /**
    * Auto-generated Migration: Please modify to your needs!
    */
    final class Version20210115094614 extends AbstractMigration
    {
        public function getDescription() : string
        {
            return 'add sessions to database';
        }

        public function up(Schema $schema) : void
        {
            $this->addSql('CREATE TABLE sessions (sess_id VARCHAR(128) NOT NULL PRIMARY KEY,sess_data BYTEA NOT NULL,sess_lifetime INTEGER NOT NULL, sess_time INTEGER NOT NULL);');

        }

        public function down(Schema $schema) : void
        {
            // this down() migration is auto-generated, please modify it to your needs

        }
    }
