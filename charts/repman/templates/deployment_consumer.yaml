apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "repman.fullname" . }}-consumer
  labels:
    {{- include "repman.labels" . | nindent 4 }}
spec:
  {{- if not .Values.consumer.autoscaling.enabled }}
  replicas: {{ .Values.consumer.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "repman.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "repman.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}-consumer
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.repman.image.repository }}:{{ .Values.repman.image.tag | default .Chart.AppVersion }}"
          command: [ 'bin/console', 'messenger:consume', 'async', '--limit=500', '-vv' ]
          imagePullPolicy: {{ .Values.repman.image.pullPolicy }}
          envFrom:
            - configMapRef:
                name: {{ include "repman.fullname" . }}-general
            - prefix: MAILER_
              secretRef:
                {{- if .Values.config.mailer.existingSecret }}
                name: {{ .Values.config.mailer.existingSecret | quote }}
                {{- else }}
                name: {{ include "repman.fullname" . }}-mailer
                {{- end }}
            - prefix: OAUTH_
              secretRef:
                {{- if .Values.config.oauth.existingSecret }}
                name: {{ .Values.config.oauth.existingSecret | quote }}
                {{- else }}
                name: {{ include "repman.fullname" . }}-oauth
                {{- end }}
            - prefix: STORAGE_AWS_
              secretRef:
                {{- if ( and .Values.config.externalS3.existingSecret .Values.config.externalS3.enabled) }}
                name: {{ .Values.config.externalS3.existingSecret | quote }}
                {{- else }}
                name: {{ include "repman.fullname" . }}-s3
                {{- end }}
          volumeMounts:
            - name: files
              mountPath: /app/config/services_prod.yaml
              subPath: services_prod_yaml
              readOnly: true
          resources:
            {{- toYaml .Values.consumer.resources | nindent 12 }}
      volumes:
        - name: files
          configMap:
            name: {{ include "repman.fullname" . }}-files
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
